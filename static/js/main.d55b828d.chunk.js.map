{"version":3,"sources":["components/Menu/Menu.js","components/Gallery/Gallery.js","components/Modal/Modal.js","components/Paint/Paint.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","datas","clickEvent","slideShow","className","onClick","to","urlPath","Gallery","map","data","index","src","images","thumbnail","alt","name","Modal","props","closeModal","largeImage","altProp","Paint","useParams","paint","find","nextSlide","indexOf","prevSlide","useState","showModal","setShowModal","handleModal","color1","color2","indexPaint","datasLenght","length","blackLineWidth","Math","round","greyLineWidth","style","backgroundImage","hero","large","gallery","artist","image","year","description","href","source","target","rel","App","forEach","d","replace","setSlideShow","handleSlideShow","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d55b828d.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\nconst Menu = ({ datas, clickEvent, slideShow }) => {\n  return (\n    <div className=\"Menu\">\n      <h1 className=\"title\">\n        <span className=\"logo\"></span>\n      </h1>\n      <div className=\"action\" onClick={clickEvent}>\n        <Link to={slideShow ? `/${datas[0].urlPath}` : \"/\"}>\n          <span className=\"link-primary\">\n            {slideShow ? \"Show slideshow\" : \"Stop slideshow\"}\n          </span>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import \"./Gallery.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst Gallery = ({ datas, clickEvent }) => {\n  return (\n    <div className=\"Gallery\">\n      {datas.map((data, index) => {\n        return (\n          <div key={index} className=\"thumbnail\">\n            <Link to={\"galleria/\" + data.urlPath} onClick={clickEvent}>\n              <img\n                className=\"image\"\n                src={data.images.thumbnail}\n                alt={data.images.name}\n              />\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import \"./Modal.scss\";\n\nconst Modal = (props) => {\n  return (\n    <div className=\"Modal\">\n      <div className=\"wrapper\">\n        <div className=\"close-modal\">\n          <span onClick={props.closeModal}>close</span>\n        </div>\n        <img src={props.largeImage} alt={props.altProp} />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./Paint.scss\";\nimport Modal from \"../Modal/Modal\";\n\nconst Paint = ({ datas }) => {\n  let { urlPath } = useParams();\n  const paint = datas.find((data) => data.urlPath === urlPath);\n\n  const nextSlide = datas.indexOf(paint) + 1;\n  const prevSlide = datas.indexOf(paint) - 1;\n\n  const [showModal, setShowModal] = useState(false);\n\n  const handleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const color1 = \"#000\";\n  const color2 = \"#ccc\";\n\n  const indexPaint = datas.indexOf(paint) + 1;\n  const datasLenght = datas.length;\n\n  const blackLineWidth = Math.round((indexPaint * 100) / datasLenght);\n  const greyLineWidth = 100 - blackLineWidth;\n\n  return (\n    <div className=\"Paint\">\n      {paint ? (\n        <>\n          <div className=\"container\">\n            <div className=\"row main\">\n              <div\n                className=\"main-image\"\n                style={{\n                  backgroundImage: `url(\"${paint.images.hero.large}\")`,\n                }}\n              >\n                <div className=\"icon-view-image\" onClick={handleModal}>\n                  <span>View Image</span>\n                </div>\n              </div>\n              {showModal && (\n                <Modal\n                  largeImage={paint.images.gallery}\n                  altProp={paint.name}\n                  closeModal={handleModal}\n                />\n              )}\n              <div className=\"main-informations\">\n                <div className=\"info\">\n                  <h1>{paint.name}</h1>\n                  <p>{paint.artist.name}</p>\n                </div>\n                <div className=\"img-artist\">\n                  <img src={paint.artist.image} alt={paint.artist.name} />\n                </div>\n              </div>\n            </div>\n            <div className=\"row content\">\n              <div className=\"date\">\n                <span>{paint.year}</span>\n              </div>\n              <div className=\"description\">\n                <p>{paint.description}</p>\n                <a\n                  className=\"source\"\n                  href={paint.source}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <span className=\"link-secondary\">Got to source</span>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"progress-bar\"\n            style={{\n              backgroundImage: `linear-gradient(to right,  ${color1}, ${color1} ${blackLineWidth}%, ${color2} ${blackLineWidth}%, ${color2} ${greyLineWidth}%)`,\n            }}\n          ></div>\n          <div className=\"footer\">\n            <div className=\"column\">\n              <h3>{paint.name}</h3>\n              <div className=\"artist-name\">\n                <span>{paint.artist.name}</span>\n              </div>\n            </div>\n            <div className=\"column nav-links\">\n              <span className=\"prev-btn\">\n                {prevSlide <= -1 ? (\n                  <span className=\"disable\"></span>\n                ) : (\n                  <Link className=\"active\" to={datas[prevSlide].urlPath}></Link>\n                )}\n              </span>\n              <span className=\"next-btn\">\n                {nextSlide >= 15 ? (\n                  <span className=\"disable\"></span>\n                ) : (\n                  <Link className=\"active\" to={datas[nextSlide].urlPath}></Link>\n                )}\n              </span>\n            </div>\n          </div>\n        </>\n      ) : (\n        <p>{urlPath} is not a planet</p>\n      )}\n    </div>\n  );\n};\n\nexport default Paint;\n","import data from \"./data.json\";\nimport \"./App.scss\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Menu from \"./components/Menu/Menu\";\nimport Gallery from \"./components/Gallery/Gallery\";\nimport Paint from \"./components/Paint/Paint\";\nimport { useState } from \"react\";\n\nconst App = () => {\n  data.forEach((d) => {\n    d[\"urlPath\"] = d.name.replace(/\\s/g, \"-\");\n  });\n\n  const [slideShow, setSlideShow] = useState(true);\n\n  const handleSlideShow = () => {\n    setSlideShow(!slideShow);\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Menu datas={data} clickEvent={handleSlideShow} slideShow={slideShow} />\n        <Switch>\n          <Route exact path=\"/galleria\">\n            <Gallery datas={data} clickEvent={handleSlideShow} />\n          </Route>\n          <Route path=\"/galleria/:urlPath\">\n            <Paint datas={data} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}